"""
Django settings for XDYY project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import configparser
import os

from django.contrib.messages import constants as messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ca1$_+fr@3yl(t(sn*e5%d=g3_8tm+*nko#j*1_$ug!%1x(nn4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# LOGIN_REDIRECT_URL = ''

# ConfigFile
CONFIG_DIR = os.path.join(BASE_DIR, 'config.ini')
cf = configparser.ConfigParser()
cf.read(CONFIG_DIR, encoding='utf-8')

ALLOWED_HOSTS = [
    '127.0.0.1',
    '.smuhelper.cn',
    '.singee.site',
]

# Application definition

INSTALLED_APPS = [
    'material',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.forms',

    'django_extensions',
    'hijack',
    'compat',
    'guardian',
    'rest_framework',
    'rest_framework.authtoken',

    'main.apps.MainConfig',
    'account.apps.AccountConfig',
    'dashboard.apps.DashboardConfig',
    'reserve.apps.ReserveConfig',
    'wechat.apps.WechatConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'XDYY.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'main.context_processors._globals',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # this is default
    'guardian.backends.ObjectPermissionBackend',
)

WSGI_APPLICATION = 'XDYY.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': cf.get('DATABASE', 'NAME') or 'XDYY',
        'USER': cf.get('DATABASE', 'USER') or 'postgres',
        'PASSWORD': cf.get('DATABASE', 'PASSWORD', fallback=''),
        'HOST': cf.get('DATABASE', 'HOST', fallback='127.0.0.1'),
        'PORT': cf.get('DATABASE', 'PORT', fallback='5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# User
AUTH_USER_MODEL = 'account.User'

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
LOGIN_URL = 'account:login'
LOGIN_REDIRECT_URL = '/'

# MediaFiles
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# HiJack
# /hijack/<user id>
# /hijack/username/<username>
# /hijack/email/<user email>
HIJACK_USE_BOOTSTRAP = True

# Message
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
    messages.DEBUG: 'info',
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),
    # 'DEFAULT_RENDERER_CLASSES': default_renderer_classes
}

if DEBUG:
    DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000
    HIJACK_ALLOW_GET_REQUESTS = True
